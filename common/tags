!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
888	ModIntOnWalls.F90	/^888	  j = slist%next(j)$/;"	l	line:228	language:Fortran	subroutine:PrepareSingIntOnWall	file:
999	ModIntOnRbcs.F90	/^999       j = slist%next(j)$/;"	l	line:108	language:Fortran	subroutine:AddIntOnRbcs	file:
999	ModIntOnWalls.F90	/^999 	  j = slist%next(j)$/;"	l	line:118	language:Fortran	subroutine:AddIntOnWalls	file:
999	ModIntOnWalls.F90	/^999       j = slist%next(j)$/;"	l	line:286	language:Fortran	subroutine:PrepareSingIntOnWall	file:
999	ModRepulsion.F90	/^999	    j = slist%next(j)$/;"	l	line:219	language:Fortran	subroutine:AddIntraCellRepulsionForce	file:
999	ModRepulsion.F90	/^999     j = slist%next(j)$/;"	l	line:532	language:Fortran	subroutine:Closest_Neighbor_Cell	file:
999	ModRepulsion.F90	/^999     j = slist%next(j)$/;"	l	line:615	language:Fortran	subroutine:Closest_Neighbor_Wall	file:
Acoef	ModConf.F90	/^  real(WP), allocatable, dimension(:)  :: Acoef,/;"	v	line:44	language:Fortran	module:ModConf
Acoef	ModDataStruct.F90	/^    real(WP),pointer,dimension(:) :: Acoef$/;"	k	line:237	language:Fortran	type:t_TargetList
AddIntOnRbcs	ModIntOnRbcs.F90	/^  subroutine AddIntOnRbcs(/;"	s	line:25	language:Fortran	module:ModIntOnRbcs
AddIntOnWalls	ModIntOnWalls.F90	/^  subroutine AddIntOnWalls(/;"	s	line:34	language:Fortran	module:ModIntOnWalls
AddIntraCellRepulsionForce	ModRepulsion.F90	/^  subroutine AddIntraCellRepulsionForce$/;"	s	line:130	language:Fortran	module:ModRepulsion
AddLinearInt	ModIntOnRbcs.F90	/^  subroutine AddLinearInt(/;"	s	line:162	language:Fortran	module:ModIntOnRbcs
AddR0GravityForce	ModRepulsion.F90	/^  subroutine AddR0GravityForce$/;"	s	line:66	language:Fortran	module:ModRepulsion
AddR0Motion	ModRepulsion.F90	/^  subroutine AddR0Motion$/;"	s	line:31	language:Fortran	module:ModRepulsion
AdjustBkgVel	ModTimeInt.F90	/^  subroutine AdjustBkgVel$/;"	s	line:904	language:Fortran
AssembleArray	ModNoSlip.F90	/^  subroutine AssembleArray(/;"	s	line:359	language:Fortran
Bcoef	ModConf.F90	/^  real(WP), allocatable, dimension(:)  :: Acoef,Bcoef$/;"	v	line:44	language:Fortran	module:ModConf
Bcoef	ModDataStruct.F90	/^    real(WP),pointer,dimension(:) :: Bcoef$/;"	k	line:219	language:Fortran	type:t_SourceList
BsplineFunc	ModBasicMath.F90	/^  subroutine BsplineFunc(/;"	s	line:382	language:Fortran	module:ModBasicMath
BuildMat	ModVelSolver.F90	/^  SUBROUTINE BuildMat(/;"	s	line:788	language:Fortran
CHRLEN	ModDataTypes.F90	/^  integer,parameter :: CHRLEN /;"	v	line:13	language:Fortran	module:ModDataTypes
CalcVelocityField	ModPostProcess.F90	/^  subroutine CalcVelocityField(/;"	s	line:28	language:Fortran	module:ModPostProcess
CellFlowRate	ModPostProcess.F90	/^  function CellFlowRate /;"	f	line:90	language:Fortran	module:ModPostProcess
Cell_Has_Source	ModConf.F90	/^  function Cell_Has_Source(/;"	f	line:469	language:Fortran	module:ModConf
Closest_Neighbor_Cell	ModRepulsion.F90	/^  subroutine Closest_Neighbor_Cell(/;"	s	line:488	language:Fortran	module:ModRepulsion
Closest_Neighbor_Wall	ModRepulsion.F90	/^  subroutine Closest_Neighbor_Wall(/;"	s	line:564	language:Fortran	module:ModRepulsion
CollectArray	ModConf.F90	/^  subroutine CollectArray(/;"	s	line:533	language:Fortran	module:ModConf
ComputeParticleStress	ModPostProcess.F90	/^  subroutine ComputeParticleStress(/;"	s	line:119	language:Fortran	module:ModPostProcess
Compute_Rbc_Vel	ModTimeInt.F90	/^  subroutine Compute_Rbc_Vel$/;"	s	line:565	language:Fortran
Compute_Rbc_Vel_SHB	ModTimeInt.F90	/^  subroutine Compute_Rbc_Vel_SHB$/;"	s	line:661	language:Fortran
Compute_Rhs	ModVelSolver.F90	/^  subroutine Compute_Rhs(/;"	s	line:463	language:Fortran
Compute_Wall_Residual_Vel	ModNoSlip.F90	/^  subroutine Compute_Wall_Residual_Vel(/;"	s	line:151	language:Fortran
CrossProd	ModBasicMath.F90	/^  function CrossProd(/;"	f	line:42	language:Fortran	module:ModBasicMath
Deflate	ModConf.F90	/^  logical  :: Deflate$/;"	v	line:45	language:Fortran	module:ModConf
DeflateGetSBModes	ModVelSolver.F90	/^  subroutine DeflateGetSBModes$/;"	s	line:361	language:Fortran
DeflateMatMult	ModVelSolver.F90	/^  subroutine DeflateMatMult(/;"	s	line:285	language:Fortran
DeflateRHS	ModVelSolver.F90	/^  subroutine DeflateRHS(/;"	s	line:220	language:Fortran
DeflateRecoverSol	ModVelSolver.F90	/^  subroutine DeflateRecoverSol(/;"	s	line:143	language:Fortran
DistOnSphere	ModPolarPatch.F90	/^  function DistOnSphere(/;"	f	line:250	language:Fortran	module:ModPolarPatch
Distrib_Source	ModPME.F90	/^  subroutine Distrib_Source(/;"	s	line:405	language:Fortran	module:ModPME
DomainDecomp	ModConf.F90	/^  subroutine DomainDecomp$/;"	s	line:414	language:Fortran	module:ModConf
EB	ModDataStruct.F90	/^    real(WP) :: ES, ED, EB$/;"	k	line:129	language:Fortran	type:t_RBC
ED	ModDataStruct.F90	/^    real(WP) :: ES, ED,/;"	k	line:129	language:Fortran	type:t_RBC
ES	ModDataStruct.F90	/^    real(WP) :: ES,/;"	k	line:129	language:Fortran	type:t_RBC
EwaldCoeff_DL	ModEwaldFunc.F90	/^  subroutine EwaldCoeff_DL(/;"	s	line:142	language:Fortran	module:ModEwaldFunc
EwaldCoeff_DL_Exact	ModEwaldFunc.F90	/^  subroutine EwaldCoeff_DL_Exact(/;"	s	line:59	language:Fortran	module:ModEwaldFunc
EwaldCoeff_SL	ModEwaldFunc.F90	/^  subroutine EwaldCoeff_SL(/;"	s	line:86	language:Fortran	module:ModEwaldFunc
EwaldCoeff_SL_Exact	ModEwaldFunc.F90	/^  subroutine EwaldCoeff_SL_Exact(/;"	s	line:25	language:Fortran	module:ModEwaldFunc
FFT_Diff	ModFFT.F90	/^  subroutine FFT_Diff(/;"	s	line:25	language:Fortran	module:ModFFT
FFT_Project	ModFFT.F90	/^  subroutine FFT_Project(/;"	s	line:100	language:Fortran	module:ModFFT
FOURTH	ModDataTypes.F90	/^  real(WP),parameter :: FOURTH /;"	v	line:18	language:Fortran	module:ModDataTypes
FOUR_TO_PHYS	ModDataTypes.F90	/^  integer,parameter :: FOUR_TO_PHYS /;"	v	line:25	language:Fortran	module:ModDataTypes
FilterRbcs	ModTimeInt.F90	/^  subroutine FilterRbcs$/;"	s	line:761	language:Fortran
FinalizeMPI	ModConf.F90	/^  subroutine FinalizeMPI$/;"	s	line:209	language:Fortran	module:ModConf
Finalize_PFFTW	ModPFFTW.F90	/^  SUBROUTINE Finalize_PFFTW$/;"	s	line:363	language:Fortran	module:ModPFFTW
ForceCoef	ModConf.F90	/^  real(WP) :: ForceCoef$/;"	v	line:53	language:Fortran	module:ModConf
FourierEwald	ModConf.F90	/^  logical :: PhysEwald, FourierEwald$/;"	v	line:15	language:Fortran	module:ModConf
GauLeg	ModQuadRule.F90	/^  subroutine GauLeg(/;"	s	line:135	language:Fortran	module:ModQuadRule
GauLeg_Sinh	ModQuadRule.F90	/^  subroutine GauLeg_Sinh(/;"	s	line:223	language:Fortran	module:ModQuadRule
GaussQuad_Finalize	ModQuadRule.F90	/^  subroutine GaussQuad_Finalize$/;"	s	line:118	language:Fortran	module:ModQuadRule
GaussQuad_Init	ModQuadRule.F90	/^  subroutine GaussQuad_Init$/;"	s	line:45	language:Fortran	module:ModQuadRule
Get_R	ModPFFTW.F90	/^  SUBROUTINE Get_R(/;"	s	line:173	language:Fortran	module:ModPFFTW
Get_That	ModPFFTW.F90	/^  SUBROUTINE Get_That(/;"	s	line:151	language:Fortran	module:ModPFFTW
GlobData_Finalize	ModData.F90	/^  subroutine GlobData_Finalize$/;"	s	line:79	language:Fortran	module:ModData
GlobData_Init	ModData.F90	/^  subroutine GlobData_Init$/;"	s	line:32	language:Fortran	module:ModData
Glob_Sph_Trans	ModVelSolver.F90	/^  subroutine Glob_Sph_Trans(/;"	s	line:656	language:Fortran
HALF	ModDataTypes.F90	/^  real(WP),parameter :: HALF /;"	v	line:16	language:Fortran	module:ModDataTypes
HashTable_Build	ModHashTable.F90	/^  subroutine HashTable_Build(/;"	s	line:23	language:Fortran	module:ModHashTable
HashTable_ComputeNumBlocks	ModHashTable.F90	/^  subroutine HashTable_ComputeNumBlocks(/;"	s	line:99	language:Fortran	module:ModHashTable
HashTable_Index	ModHashTable.F90	/^  subroutine HashTable_Index(/;"	s	line:67	language:Fortran	module:ModHashTable
ID	ModDataStruct.F90	/^    integer :: ID	/;"	k	line:131	language:Fortran	type:t_RBC
ID	ModDataStruct.F90	/^    integer :: ID$/;"	k	line:194	language:Fortran	type:t_Wall
IOTA	ModDataTypes.F90	/^  complex(WP),parameter :: IOTA /;"	v	line:22	language:Fortran	module:ModDataTypes
IO_Finalize	ModIO.F90	/^  subroutine IO_Finalize$/;"	s	line:64	language:Fortran	module:ModIO
IO_Init	ModIO.F90	/^  subroutine IO_Init$/;"	s	line:39	language:Fortran	module:ModIO
I_2PI	ModDataTypes.F90	/^  real(WP),parameter :: I_2PI /;"	v	line:21	language:Fortran	module:ModDataTypes
InitMPI	ModConf.F90	/^  subroutine InitMPI(/;"	s	line:108	language:Fortran	module:ModConf
Init_FFTWR	ModPFFTW.F90	/^  SUBROUTINE Init_FFTWR$/;"	s	line:121	language:Fortran	module:ModPFFTW
Init_FFTWT	ModPFFTW.F90	/^  SUBROUTINE Init_FFTWT$/;"	s	line:96	language:Fortran	module:ModPFFTW
Init_PFFTW	ModPFFTW.F90	/^  SUBROUTINE Init_PFFTW(/;"	s	line:45	language:Fortran	module:ModPFFTW
InterCellRepulsion	ModRepulsion.F90	/^  subroutine InterCellRepulsion$/;"	s	line:274	language:Fortran	module:ModRepulsion
Interp_Vel	ModPME.F90	/^  subroutine Interp_Vel(/;"	s	line:450	language:Fortran	module:ModPME
InvMat2	ModBasicMath.F90	/^  function InvMat2(/;"	f	line:53	language:Fortran	module:ModBasicMath
InvMat3	ModBasicMath.F90	/^  function InvMat3(/;"	f	line:68	language:Fortran	module:ModBasicMath
Is_Source	ModConf.F90	/^  function Is_Source(/;"	f	line:443	language:Fortran	module:ModConf
Lb	ModConf.F90	/^  real(WP) :: Lb(/;"	v	line:11	language:Fortran	module:ModConf
LeukWallRepulsion	ModRepulsion.F90	/^  subroutine LeukWallRepulsion$/;"	s	line:413	language:Fortran	module:ModRepulsion
MPI_COMM_Ewald	ModConf.F90	/^  integer :: MPI_COMM_Ewald$/;"	v	line:17	language:Fortran	module:ModConf
MPI_WP	ModDataTypes.F90	/^  integer,parameter :: MPI_WP /;"	v	line:10	language:Fortran	module:ModDataTypes
MaskFunc	ModBasicMath.F90	/^  function MaskFunc(/;"	f	line:341	language:Fortran	module:ModBasicMath
MaskFunc_Exact	ModBasicMath.F90	/^  function MaskFunc_Exact(/;"	f	line:322	language:Fortran	module:ModBasicMath
Matrix_PseudoInvert	ModBasicMath.F90	/^  subroutine Matrix_PseudoInvert(/;"	s	line:154	language:Fortran	module:ModBasicMath
MinDistToTri	ModIntOnWalls.F90	/^  function MinDistToTri(/;"	f	line:470	language:Fortran	module:ModIntOnWalls
Min_Quad_2D	ModBasicMath.F90	/^  subroutine Min_Quad_2D(/;"	s	line:287	language:Fortran	module:ModBasicMath
ModBasicMath	ModBasicMath.F90	/^module ModBasicMath$/;"	m	line:2	language:Fortran
ModConf	ModConf.F90	/^module ModConf$/;"	m	line:2	language:Fortran
ModData	ModData.F90	/^module ModData$/;"	m	line:2	language:Fortran
ModDataStruct	ModDataStruct.F90	/^module ModDataStruct$/;"	m	line:1	language:Fortran
ModDataTypes	ModDataTypes.F90	/^module ModDataTypes$/;"	m	line:1	language:Fortran
ModEwaldFunc	ModEwaldFunc.F90	/^module ModEwaldFunc$/;"	m	line:2	language:Fortran
ModFFT	ModFFT.F90	/^module ModFFT$/;"	m	line:4	language:Fortran
ModHashTable	ModHashTable.F90	/^module ModHashTable$/;"	m	line:1	language:Fortran
ModIO	ModIO.F90	/^module ModIO$/;"	m	line:1	language:Fortran
ModIntOnRbcs	ModIntOnRbcs.F90	/^module ModIntOnRbcs$/;"	m	line:2	language:Fortran
ModIntOnWalls	ModIntOnWalls.F90	/^module ModIntOnWalls$/;"	m	line:2	language:Fortran
ModNoSlip	ModNoSlip.F90	/^module ModNoSlip$/;"	m	line:2	language:Fortran
ModPFFTW	ModPFFTW.F90	/^module ModPFFTW$/;"	m	line:3	language:Fortran
ModPME	ModPME.F90	/^module ModPME$/;"	m	line:2	language:Fortran
ModPolarPatch	ModPolarPatch.F90	/^module ModPolarPatch$/;"	m	line:2	language:Fortran
ModPostProcess	ModPostProcess.F90	/^module ModPostProcess$/;"	m	line:1	language:Fortran
ModQuadRule	ModQuadRule.F90	/^module ModQuadRule$/;"	m	line:2	language:Fortran
ModRbc	ModRbc.F90	/^module ModRbc$/;"	m	line:1	language:Fortran
ModRbcSingInt	ModRbcSingInt.F90	/^module ModRbcSingInt$/;"	m	line:1	language:Fortran
ModRepulsion	ModRepulsion.F90	/^module ModRepulsion$/;"	m	line:3	language:Fortran
ModSourceList	ModSourceList.F90	/^module ModSourceList$/;"	m	line:1	language:Fortran
ModSphpk	ModSphpk.F90	/^module ModSphpk$/;"	m	line:2	language:Fortran
ModSpline	ModSpline.F90	/^module ModSpline$/;"	m	line:1	language:Fortran
ModTargetList	ModTargetList.F90	/^module ModTargetList$/;"	m	line:1	language:Fortran
ModTimeInt	ModTimeInt.F90	/^module ModTimeInt$/;"	m	line:2	language:Fortran
ModVelSolver	ModVelSolver.F90	/^module ModVelSolver$/;"	m	line:2	language:Fortran
ModWall	ModWall.F90	/^module ModWall$/;"	m	line:2	language:Fortran
ModifiedVolConstrainRbcs	ModTimeInt.F90	/^ subroutine ModifiedVolConstrainRbcs$/;"	s	line:828	language:Fortran
MyAsinh	ModQuadRule.F90	/^  function MyAsinh(/;"	f	line:269	language:Fortran	module:ModQuadRule
MyMatMult	ModNoSlip.F90	/^  subroutine MyMatMult(/;"	s	line:253	language:Fortran
MyMatMult	ModVelSolver.F90	/^  subroutine MyMatMult(/;"	s	line:535	language:Fortran
My_VecGetValues	ModNoSlip.F90	/^  subroutine My_VecGetValues(/;"	s	line:309	language:Fortran
My_VecGetValues	ModVelSolver.F90	/^  subroutine My_VecGetValues(/;"	s	line:737	language:Fortran
My_VecSetValues	ModNoSlip.F90	/^  subroutine My_VecSetValues(/;"	s	line:329	language:Fortran
My_VecSetValues	ModVelSolver.F90	/^  subroutine My_VecSetValues(/;"	s	line:757	language:Fortran
N	ModDataStruct.F90	/^    integer :: N$/;"	k	line:250	language:Fortran	type:t_NbrRbcList
NN	ModPFFTW.F90	/^  integer :: NN	/;"	v	line:13	language:Fortran	module:ModPFFTW
NbC_Ewd	ModConf.F90	/^  integer :: Nb_Ewd(3), NbC_Ewd(/;"	v	line:36	language:Fortran	module:ModConf
Nb_Ewd	ModConf.F90	/^  integer :: Nb_Ewd(/;"	v	line:36	language:Fortran	module:ModConf
NbrRbcList_Create	ModRbcSingInt.F90	/^  subroutine NbrRbcList_Create(/;"	s	line:320	language:Fortran	module:ModRbcSingInt
NbrRbcList_Destroy	ModRbcSingInt.F90	/^  subroutine NbrRbcList_Destroy(/;"	s	line:331	language:Fortran	module:ModRbcSingInt
NbrRbcList_Insert	ModRbcSingInt.F90	/^  subroutine NbrRbcList_Insert(/;"	s	line:345	language:Fortran	module:ModRbcSingInt
Nc	ModDataStruct.F90	/^    integer :: Nc(/;"	k	line:222	language:Fortran	type:t_SourceList
Nt	ModConf.F90	/^  integer :: Nt0/;"	v	line:69	language:Fortran	module:ModConf
Nt0	ModConf.F90	/^  integer :: Nt0,/;"	v	line:69	language:Fortran	module:ModConf
Ntable	ModEwaldFunc.F90	/^  integer,parameter :: Ntable /;"	v	line:9	language:Fortran	module:ModEwaldFunc
OBJS	Makefile	/^OBJS = $(patsubst %.F90,%.o,$(wildcard Mod*.F90))$/;"	m	line:4	language:Make
OneTimeInt	ModTimeInt.F90	/^ subroutine OneTimeInt$/;"	s	line:404	language:Fortran	module:ModTimeInt
OneTimeInt_SHB	ModTimeInt.F90	/^  subroutine OneTimeInt_SHB(/;"	s	line:308	language:Fortran	module:ModTimeInt
OneTimeInt_Verif	ModTimeInt.F90	/^ subroutine OneTimeInt_Verif(/;"	s	line:337	language:Fortran	module:ModTimeInt
PBspln_Ewd	ModConf.F90	/^  integer :: PBspln_Ewd$/;"	v	line:37	language:Fortran	module:ModConf
PETSC_AVOID_MPIF_H	petsc_include.h	/^#define PETSC_AVOID_MPIF_H$/;"	d	line:1	language:C++
PHYS_TO_FOUR	ModDataTypes.F90	/^  integer,parameter :: PHYS_TO_FOUR /;"	v	line:24	language:Fortran	module:ModDataTypes
PI	ModDataTypes.F90	/^  real(WP),parameter :: PI /;"	v	line:19	language:Fortran	module:ModDataTypes
PME_Add_Interp_Vel	ModPME.F90	/^  subroutine PME_Add_Interp_Vel(/;"	s	line:228	language:Fortran	module:ModPME
PME_Distrib_Source	ModPME.F90	/^  subroutine PME_Distrib_Source(/;"	s	line:58	language:Fortran	module:ModPME
PME_Finalize	ModPME.F90	/^  subroutine PME_Finalize$/;"	s	line:342	language:Fortran	module:ModPME
PME_Init	ModPME.F90	/^  subroutine PME_Init$/;"	s	line:252	language:Fortran	module:ModPME
PME_Transform	ModPME.F90	/^  subroutine PME_Transform$/;"	s	line:137	language:Fortran	module:ModPME
PeriodicWall	ModTimeInt.F90	/^  subroutine PeriodicWall$/;"	s	line:885	language:Fortran
PhysEwald	ModConf.F90	/^  logical :: PhysEwald,/;"	v	line:15	language:Fortran	module:ModConf
PolarPatch_Build	ModPolarPatch.F90	/^  subroutine PolarPatch_Build(/;"	s	line:100	language:Fortran	module:ModPolarPatch
PolarPatch_FindPoints	ModPolarPatch.F90	/^  subroutine PolarPatch_FindPoints(/;"	s	line:162	language:Fortran	module:ModPolarPatch
PolarPatch_Map	ModPolarPatch.F90	/^  subroutine PolarPatch_Map(/;"	s	line:219	language:Fortran	module:ModPolarPatch
PrepareSingIntOnWall	ModIntOnWalls.F90	/^  subroutine PrepareSingIntOnWall(/;"	s	line:170	language:Fortran	module:ModIntOnWalls
Proj	ModVelSolver.F90	/^  subroutine Proj(/;"	s	line:617	language:Fortran
QuadFit_1D	ModBasicMath.F90	/^  subroutine QuadFit_1D(/;"	s	line:181	language:Fortran	module:ModBasicMath
QuadFit_2D	ModBasicMath.F90	/^  subroutine QuadFit_2D(/;"	s	line:226	language:Fortran	module:ModBasicMath
RBC_ComputeGeometry	ModRbc.F90	/^  subroutine RBC_ComputeGeometry(/;"	s	line:279	language:Fortran	module:ModRbc
RBC_CovarGrad_Tensor	ModRbc.F90	/^  subroutine RBC_CovarGrad_Tensor(/;"	s	line:461	language:Fortran	module:ModRbc
RBC_CovarGrad_Vec	ModRbc.F90	/^  subroutine RBC_CovarGrad_Vec(/;"	s	line:402	language:Fortran	module:ModRbc
RBC_Create	ModRbc.F90	/^  subroutine RBC_Create(/;"	s	line:40	language:Fortran	module:ModRbc
RBC_Destroy	ModRbc.F90	/^  subroutine RBC_Destroy(/;"	s	line:110	language:Fortran	module:ModRbc
RBC_Integral	ModRbc.F90	/^  function RBC_Integral(/;"	f	line:568	language:Fortran	module:ModRbc
RBC_MakeBiConcave	ModRbc.F90	/^  subroutine RBC_MakeBiConcave(/;"	s	line:243	language:Fortran	module:ModRbc
RBC_MakeEllipsoid	ModRbc.F90	/^  subroutine RBC_MakeEllipsoid(/;"	s	line:207	language:Fortran	module:ModRbc
RBC_MakeLeukocyte	ModRbc.F90	/^  subroutine RBC_MakeLeukocyte(/;"	s	line:134	language:Fortran	module:ModRbc
RBC_MakePlatelet	ModRbc.F90	/^  subroutine RBC_MakePlatelet(/;"	s	line:187	language:Fortran	module:ModRbc
RBC_MakeSphere	ModRbc.F90	/^  subroutine RBC_MakeSphere(/;"	s	line:152	language:Fortran	module:ModRbc
RBC_NearSingInt	ModRbcSingInt.F90	/^  subroutine RBC_NearSingInt(/;"	s	line:104	language:Fortran	module:ModRbcSingInt
RBC_NearSingInt_ReAdd	ModRbcSingInt.F90	/^  subroutine RBC_NearSingInt_ReAdd(/;"	s	line:234	language:Fortran	module:ModRbcSingInt
RBC_NearSingInt_Subtract	ModRbcSingInt.F90	/^  subroutine RBC_NearSingInt_Subtract(/;"	s	line:177	language:Fortran	module:ModRbcSingInt
RBC_SingInt	ModRbcSingInt.F90	/^  subroutine RBC_SingInt(/;"	s	line:29	language:Fortran	module:ModRbcSingInt
RBC_SphProject	ModRbc.F90	/^  subroutine RBC_SphProject(/;"	s	line:534	language:Fortran	module:ModRbc
RandomNumber	ModBasicMath.F90	/^  function RandomNumber(/;"	f	line:411	language:Fortran	module:ModBasicMath
RbcPolarPatch_Create	ModPolarPatch.F90	/^  subroutine RbcPolarPatch_Create(/;"	s	line:27	language:Fortran	module:ModPolarPatch
RbcPolarPatch_Destroy	ModPolarPatch.F90	/^  subroutine RbcPolarPatch_Destroy(/;"	s	line:80	language:Fortran	module:ModPolarPatch
Rbc_BuildSurfaceSource	ModRbc.F90	/^  subroutine Rbc_BuildSurfaceSource(/;"	s	line:591	language:Fortran	module:ModRbc
ReadConfig	ModConf.F90	/^  subroutine ReadConfig(/;"	s	line:227	language:Fortran	module:ModConf
ReadMyWallMesh	ModIO.F90	/^  subroutine ReadMyWallMesh(/;"	s	line:524	language:Fortran	module:ModIO
ReadRestart	ModIO.F90	/^  subroutine ReadRestart(/;"	s	line:628	language:Fortran	module:ModIO
ReadRestart_NoWalls	ModIO.F90	/^ subroutine ReadRestart_NoWalls(/;"	s	line:840	language:Fortran	module:ModIO
ReadRestart_basecell	ModIO.F90	/^  subroutine ReadRestart_basecell(/;"	s	line:765	language:Fortran	module:ModIO
ReadWallMesh	ModIO.F90	/^  subroutine ReadWallMesh(/;"	s	line:471	language:Fortran	module:ModIO
ReboxRbcs	ModTimeInt.F90	/^  subroutine ReboxRbcs$/;"	s	line:867	language:Fortran
RotateMatrix	ModBasicMath.F90	/^  function RotateMatrix(/;"	f	line:99	language:Fortran	module:ModBasicMath
SINGLE_NODE	ModConf.F90	/^  logical :: SINGLE_NODE$/;"	v	line:21	language:Fortran	module:ModConf
SetActiveFlag	ModTargetList.F90	/^  subroutine SetActiveFlag(/;"	s	line:206	language:Fortran	module:ModTargetList
SetEwaldPrms	ModConf.F90	/^  subroutine SetEwaldPrms$/;"	s	line:350	language:Fortran	module:ModConf
ShAnalEqu	ModSphpk.F90	/^  subroutine ShAnalEqu(/;"	s	line:164	language:Fortran	module:ModSphpk
ShAnalEqu_Init	ModSphpk.F90	/^  subroutine ShAnalEqu_Init(/;"	s	line:115	language:Fortran	module:ModSphpk
ShAnalGau	ModSphpk.F90	/^  subroutine ShAnalGau(/;"	s	line:75	language:Fortran	module:ModSphpk
ShAnalGau_Init	ModSphpk.F90	/^  subroutine ShAnalGau_Init(/;"	s	line:27	language:Fortran	module:ModSphpk
ShFilter	ModSphpk.F90	/^  subroutine ShFilter(/;"	s	line:425	language:Fortran	module:ModSphpk
ShGradGau	ModSphpk.F90	/^  subroutine ShGradGau(/;"	s	line:379	language:Fortran	module:ModSphpk
ShGradGau_Init	ModSphpk.F90	/^  subroutine ShGradGau_Init(/;"	s	line:343	language:Fortran	module:ModSphpk
ShSynthEqu	ModSphpk.F90	/^  subroutine ShSynthEqu(/;"	s	line:310	language:Fortran	module:ModSphpk
ShSynthEqu_Init	ModSphpk.F90	/^  subroutine ShSynthEqu_Init(/;"	s	line:275	language:Fortran	module:ModSphpk
ShSynthGau	ModSphpk.F90	/^  subroutine ShSynthGau(/;"	s	line:242	language:Fortran	module:ModSphpk
ShSynthGau_Init	ModSphpk.F90	/^  subroutine ShSynthGau_Init(/;"	s	line:198	language:Fortran	module:ModSphpk
Shell_Bend	ModRbc.F90	/^  subroutine Shell_Bend(/;"	s	line:825	language:Fortran	module:ModRbc
Shell_ElasStrs	ModRbc.F90	/^  subroutine Shell_ElasStrs(/;"	s	line:784	language:Fortran	module:ModRbc
Shell_ResForce	ModRbc.F90	/^  subroutine Shell_ResForce(/;"	s	line:691	language:Fortran	module:ModRbc
SingIntOnWall	ModIntOnWalls.F90	/^  subroutine SingIntOnWall(/;"	s	line:133	language:Fortran	module:ModIntOnWalls
SourceList_Create	ModSourceList.F90	/^  subroutine SourceList_Create(/;"	s	line:27	language:Fortran	module:ModSourceList
SourceList_Destroy	ModSourceList.F90	/^  subroutine SourceList_Destroy(/;"	s	line:72	language:Fortran	module:ModSourceList
SourceList_UpdateCoord	ModSourceList.F90	/^  subroutine SourceList_UpdateCoord(/;"	s	line:92	language:Fortran	module:ModSourceList
SourceList_UpdateDensity	ModSourceList.F90	/^  subroutine SourceList_UpdateDensity(/;"	s	line:160	language:Fortran	module:ModSourceList
Spline_Build	ModSpline.F90	/^  subroutine Spline_Build(/;"	s	line:71	language:Fortran	module:ModSpline
Spline_Build_on_Sphere	ModSpline.F90	/^  subroutine Spline_Build_on_Sphere(/;"	s	line:121	language:Fortran	module:ModSpline
Spline_Create	ModSpline.F90	/^  subroutine Spline_Create(/;"	s	line:24	language:Fortran	module:ModSpline
Spline_Destroy	ModSpline.F90	/^  subroutine Spline_Destroy(/;"	s	line:51	language:Fortran	module:ModSpline
Spline_FindProjection	ModSpline.F90	/^  subroutine Spline_FindProjection(/;"	s	line:203	language:Fortran	module:ModSpline
Spline_Interp	ModSpline.F90	/^  subroutine Spline_Interp(/;"	s	line:150	language:Fortran	module:ModSpline
SyncSurfCoord	ModData.F90	/^  subroutine SyncSurfCoord$/;"	s	line:91	language:Fortran	module:ModData
THRD	ModDataTypes.F90	/^  real(WP),parameter :: THRD /;"	v	line:17	language:Fortran	module:ModDataTypes
TWO_PI	ModDataTypes.F90	/^  real(WP),parameter :: TWO_PI /;"	v	line:20	language:Fortran	module:ModDataTypes
TargetList_CollectArray	ModTargetList.F90	/^  subroutine TargetList_CollectArray(/;"	s	line:173	language:Fortran	module:ModTargetList
TargetList_Create	ModTargetList.F90	/^  subroutine TargetList_Create(/;"	s	line:26	language:Fortran	module:ModTargetList
TargetList_CreateFromRaw	ModTargetList.F90	/^  subroutine TargetList_CreateFromRaw(/;"	s	line:140	language:Fortran	module:ModTargetList
TargetList_Destroy	ModTargetList.F90	/^  subroutine TargetList_Destroy(/;"	s	line:86	language:Fortran	module:ModTargetList
TargetList_Update	ModTargetList.F90	/^  subroutine TargetList_Update(/;"	s	line:96	language:Fortran	module:ModTargetList
TimeInt	ModTimeInt.F90	/^  subroutine TimeInt$/;"	s	line:101	language:Fortran	module:ModTimeInt
TimeIntModVC	ModTimeInt.F90	/^ subroutine TimeIntModVC$/;"	s	line:224	language:Fortran	module:ModTimeInt
TimeInt_AxiSymm	ModTimeInt.F90	/^  subroutine TimeInt_AxiSymm$/;"	s	line:183	language:Fortran	module:ModTimeInt
TimeInt_Finalize	ModTimeInt.F90	/^  subroutine TimeInt_Finalize$/;"	s	line:91	language:Fortran	module:ModTimeInt
TimeInt_Init	ModTimeInt.F90	/^  subroutine TimeInt_Init$/;"	s	line:46	language:Fortran	module:ModTimeInt
TriArea	ModBasicMath.F90	/^  function TriArea(/;"	f	line:134	language:Fortran	module:ModBasicMath
Tri_Has_Source	ModConf.F90	/^  function Tri_Has_Source(/;"	f	line:501	language:Fortran	module:ModConf
Tri_Int_Duffy	ModIntOnWalls.F90	/^  subroutine Tri_Int_Duffy(/;"	s	line:363	language:Fortran	module:ModIntOnWalls
Tri_Int_Regular	ModIntOnWalls.F90	/^  subroutine Tri_Int_Regular(/;"	s	line:309	language:Fortran	module:ModIntOnWalls
Ts	ModConf.F90	/^  real(WP) :: time0, time, Ts	/;"	v	line:70	language:Fortran	module:ModConf
Update_Buff_Vel	ModPME.F90	/^  subroutine Update_Buff_Vel$/;"	s	line:354	language:Fortran	module:ModPME
VecNorm	ModBasicMath.F90	/^  function VecNorm(/;"	f	line:32	language:Fortran	module:ModBasicMath
VolConstrainRbcs	ModTimeInt.F90	/^  subroutine VolConstrainRbcs$/;"	s	line:791	language:Fortran
WP	ModDataTypes.F90	/^  integer,parameter :: WP /;"	v	line:9	language:Fortran	module:ModDataTypes
WallBuildMat	ModNoSlip.F90	/^  SUBROUTINE WallBuildMat(/;"	s	line:200	language:Fortran
WallShearForce	ModPostProcess.F90	/^  function WallShearForce /;"	f	line:64	language:Fortran	module:ModPostProcess
Wall_Build_V2v	ModWall.F90	/^  subroutine Wall_Build_V2v(/;"	s	line:66	language:Fortran	module:ModWall
Wall_ComputeGeometry	ModWall.F90	/^  subroutine Wall_ComputeGeometry(/;"	s	line:118	language:Fortran	module:ModWall
Wall_Create	ModWall.F90	/^  subroutine Wall_Create(/;"	s	line:24	language:Fortran	module:ModWall
Wall_Destroy	ModWall.F90	/^  subroutine Wall_Destroy(/;"	s	line:48	language:Fortran	module:ModWall
WriteAll	ModIO.F90	/^  subroutine WriteAll(/;"	s	line:83	language:Fortran	module:ModIO
WriteExactPts	ModIO.F90	/^  subroutine WriteExactPts(/;"	s	line:252	language:Fortran	module:ModIO
WriteFlowRate	ModIO.F90	/^  subroutine WriteFlowRate(/;"	s	line:372	language:Fortran	module:ModIO
WriteManyRBCs	ModIO.F90	/^  subroutine WriteManyRBCs(/;"	s	line:165	language:Fortran	module:ModIO
WriteManyRBCsNoFilt	ModIO.F90	/^  subroutine WriteManyRBCsNoFilt(/;"	s	line:214	language:Fortran	module:ModIO
WriteManyWalls	ModIO.F90	/^  subroutine WriteManyWalls(/;"	s	line:313	language:Fortran	module:ModIO
WritePressGrad	ModIO.F90	/^  subroutine WritePressGrad(/;"	s	line:354	language:Fortran	module:ModIO
WriteRBC	ModIO.F90	/^  subroutine WriteRBC(/;"	s	line:122	language:Fortran	module:ModIO
WriteRestart	ModIO.F90	/^  subroutine WriteRestart(/;"	s	line:579	language:Fortran	module:ModIO
WriteWall	ModIO.F90	/^  subroutine WriteWall(/;"	s	line:284	language:Fortran	module:ModIO
a	ModDataStruct.F90	/^    real/;"	k	line:116	language:Fortran	type:t_RBC
a1	ModDataStruct.F90	/^    real(WP),dimension(:,:,:),pointer :: a1,/;"	k	line:114	language:Fortran	type:t_RBC
a1_rcp	ModDataStruct.F90	/^    real(WP),dimension(:,:,:),pointer :: a1, a2, a1_rcp,/;"	k	line:114	language:Fortran	type:t_RBC
a2	ModDataStruct.F90	/^    real(WP),dimension(:,:,:),pointer :: a1, a2,/;"	k	line:114	language:Fortran	type:t_RBC
a2_rcp	ModDataStruct.F90	/^    real(WP),dimension(:,:,:),pointer :: a1, a2, a1_rcp, a2_rcp,/;"	k	line:114	language:Fortran	type:t_RBC
a3	ModDataStruct.F90	/^    real(WP),dimension(:,:,:),pointer :: a1, a2, a1_rcp, a2_rcp, a3$/;"	k	line:114	language:Fortran	type:t_RBC
a3	ModDataStruct.F90	/^    real(WP),pointer :: a3(/;"	k	line:189	language:Fortran	type:t_Wall
a3	ModDataStruct.F90	/^    real(WP),pointer,dimension(:,:) :: x, f, g, a3$/;"	k	line:217	language:Fortran	type:t_SourceList
a_rcp	ModDataStruct.F90	/^    real(WP),dimension(:,:,:,:),pointer :: a, a_rcp,/;"	k	line:116	language:Fortran	type:t_RBC
active	ModDataStruct.F90	/^    logical,pointer :: active(/;"	k	line:239	language:Fortran	type:t_TargetList
alpha_Ewd	ModConf.F90	/^  real(WP) :: alpha_Ewd,/;"	v	line:34	language:Fortran	module:ModConf
area	ModDataStruct.F90	/^    real(WP) :: xc(3), vol, area$/;"	k	line:123	language:Fortran	type:t_RBC
area	ModDataStruct.F90	/^    real(WP),pointer :: a3(:,:), area(/;"	k	line:189	language:Fortran	type:t_Wall
areaTot	ModDataStruct.F90	/^    real(WP) :: areaTot$/;"	k	line:190	language:Fortran	type:t_Wall
b	ModDataStruct.F90	/^    real(WP),dimension(:,:,:,:),pointer :: a, a_rcp, b$/;"	k	line:116	language:Fortran	type:t_RBC
bb	ModPME.F90	/^  real(WP),allocatable :: bb(/;"	v	line:37	language:Fortran	module:ModPME
cell_out	ModConf.F90	/^  integer :: cell_out$/;"	v	line:83	language:Fortran	module:ModConf
cell_unit	ModConf.F90	/^  integer,parameter :: cell_unit /;"	v	line:76	language:Fortran	module:ModConf
celltype	ModDataStruct.F90	/^    integer :: celltype$/;"	k	line:133	language:Fortran	type:t_RBC
chunkR	ModPFFTW.F90	/^  integer,allocatable,dimension(:)	:: chunkR$/;"	v	line:16	language:Fortran	module:ModPFFTW
chunkT	ModPFFTW.F90	/^  integer,allocatable,dimension(:)	:: chunkT$/;"	v	line:18	language:Fortran	module:ModPFFTW
detj	ModDataStruct.F90	/^    real(WP),dimension(:,:),pointer :: detj$/;"	k	line:115	language:Fortran	type:t_RBC
dist	ModDataStruct.F90	/^    real(WP),pointer :: dist(/;"	k	line:251	language:Fortran	type:t_NbrRbcList
dof	ModNoSlip.F90	/^  integer :: npoint, dof$/;"	v	line:22	language:Fortran	module:ModNoSlip
e2v	ModDataStruct.F90	/^    integer,pointer :: e2v(/;"	k	line:185	language:Fortran	type:t_Wall
epsDist	ModConf.F90	/^  real(WP) :: epsDist$/;"	v	line:54	language:Fortran	module:ModConf
epsDist	ModDataStruct.F90	/^    real(WP),pointer :: a3(:,:), area(:), epsDist(/;"	k	line:189	language:Fortran	type:t_Wall
eps_Ewd	ModConf.F90	/^  real(WP) :: alpha_Ewd, eps_Ewd$/;"	v	line:34	language:Fortran	module:ModConf
f	ModDataStruct.F90	/^    real(WP),dimension(:,:,:),pointer :: f,/;"	k	line:118	language:Fortran	type:t_RBC
f	ModDataStruct.F90	/^    real(WP),pointer :: x(:,:), f(/;"	k	line:184	language:Fortran	type:t_Wall
f	ModDataStruct.F90	/^    real(WP),pointer,dimension(:,:) :: x, f,/;"	k	line:217	language:Fortran	type:t_SourceList
ff	ModPME.F90	/^  double precision,allocatable :: ff(/;"	v	line:33	language:Fortran	module:ModPME
ffC	ModPME.F90	/^  double complex,allocatable :: ffC(/;"	v	line:34	language:Fortran	module:ModPME
flag_doub_lay	ModPME.F90	/^  logical :: flag_sing_lay, flag_doub_lay$/;"	v	line:40	language:Fortran	module:ModPME
flag_sing_lay	ModPME.F90	/^  logical :: flag_sing_lay,/;"	v	line:40	language:Fortran	module:ModPME
flow_out	ModConf.F90	/^  integer :: flow_out$/;"	v	line:86	language:Fortran	module:ModConf
flow_unit	ModConf.F90	/^  integer,parameter :: flow_unit /;"	v	line:79	language:Fortran	module:ModConf
fmags	ModConf.F90	/^  real(WP), dimension(4) :: fmags$/;"	v	line:63	language:Fortran	module:ModConf
fn_FMT	ModConf.F90	/^  character(*),parameter :: fn_FMT /;"	v	line:74	language:Fortran	module:ModConf
ftot_out	ModConf.F90	/^  integer :: ftot_out$/;"	v	line:88	language:Fortran	module:ModConf
ftot_unit	ModConf.F90	/^  integer,parameter :: ftot_unit /;"	v	line:81	language:Fortran	module:ModConf
g	ModDataStruct.F90	/^    real(WP),dimension(:,:,:),pointer :: f, g,/;"	k	line:118	language:Fortran	type:t_RBC
g	ModDataStruct.F90	/^    real(WP),pointer :: x(:,:), f(:,:), g(/;"	k	line:184	language:Fortran	type:t_Wall
g	ModDataStruct.F90	/^    real(WP),pointer,dimension(:,:) :: x, f, g,/;"	k	line:217	language:Fortran	type:t_SourceList
getRdata_a2a	ModPFFTW.F90	/^  SUBROUTINE getRdata_a2a(/;"	s	line:192	language:Fortran	module:ModPFFTW
getTdata_a2a	ModPFFTW.F90	/^  SUBROUTINE getTdata_a2a(/;"	s	line:262	language:Fortran	module:ModPFFTW
get_rhoR	ModPFFTW.F90	/^  SUBROUTINE get_rhoR$/;"	s	line:332	language:Fortran	module:ModPFFTW
get_rhoRh	ModPFFTW.F90	/^  SUBROUTINE get_rhoRh$/;"	s	line:346	language:Fortran	module:ModPFFTW
get_rhoT	ModPFFTW.F90	/^  SUBROUTINE get_rhoT$/;"	s	line:339	language:Fortran	module:ModPFFTW
get_rhoTh	ModPFFTW.F90	/^  SUBROUTINE get_rhoTh$/;"	s	line:354	language:Fortran	module:ModPFFTW
gqQuad9	ModQuadRule.F90	/^  type(t_GaussQuad2D),target :: gqQuad9$/;"	v	line:29	language:Fortran	module:ModQuadRule
gqTri3	ModQuadRule.F90	/^  type(t_GaussQuad2D),target :: gqTri7, gqTri3$/;"	v	line:28	language:Fortran	module:ModQuadRule
gqTri7	ModQuadRule.F90	/^  type(t_GaussQuad2D),target :: gqTri7,/;"	v	line:28	language:Fortran	module:ModQuadRule
hoc	ModDataStruct.F90	/^    integer,pointer :: hoc(/;"	k	line:224	language:Fortran	type:t_SourceList
hx	ModDataStruct.F90	/^    real(WP) :: hx,/;"	k	line:37	language:Fortran	type:t_spline
hy	ModDataStruct.F90	/^    real(WP) :: hx, hy,/;"	k	line:37	language:Fortran	type:t_spline
iLb	ModConf.F90	/^  real(WP) :: Lb(3), iLb(/;"	v	line:11	language:Fortran	module:ModConf
iLbNc	ModDataStruct.F90	/^    real(WP) :: iLbNc(/;"	k	line:223	language:Fortran	type:t_SourceList
ihx	ModDataStruct.F90	/^    real(WP) :: hx, hy, ihx,/;"	k	line:37	language:Fortran	type:t_spline
ihy	ModDataStruct.F90	/^    real(WP) :: hx, hy, ihx, ihy$/;"	k	line:37	language:Fortran	type:t_spline
indx	ModDataStruct.F90	/^    integer,pointer :: indx(/;"	k	line:220	language:Fortran	type:t_SourceList
indx	ModDataStruct.F90	/^    integer,pointer :: indx(/;"	k	line:238	language:Fortran	type:t_TargetList
indx	ModDataStruct.F90	/^    integer,pointer :: indx(/;"	k	line:252	language:Fortran	type:t_NbrRbcList
indxVertGlb	ModDataStruct.F90	/^    integer,pointer :: indxVertGlb(/;"	k	line:187	language:Fortran	type:t_Wall
initCOEFs	ModConf.F90	/^  subroutine initCOEFs$/;"	s	line:328	language:Fortran	module:ModConf
iqBgn	ModPME.F90	/^  integer,dimension(3) :: iqBgn,/;"	v	line:22	language:Fortran	module:ModPME
iqEnd	ModPME.F90	/^  integer,dimension(3) :: iqBgn, iqEnd$/;"	v	line:22	language:Fortran	module:ModPME
ixBgn	ModPME.F90	/^  integer,dimension(3) :: ixBgn,/;"	v	line:21	language:Fortran	module:ModPME
ixEnd	ModPME.F90	/^  integer,dimension(3) :: ixBgn, ixEnd$/;"	v	line:21	language:Fortran	module:ModPME
kx	ModDataStruct.F90	/^    real(WP),pointer :: kx(/;"	k	line:40	language:Fortran	type:t_spline
ky	ModDataStruct.F90	/^    real(WP),pointer :: kx(:), ky(/;"	k	line:40	language:Fortran	type:t_spline
lam	ModDataStruct.F90	/^    real(WP),pointer,dimension(:) :: lam$/;"	k	line:218	language:Fortran	type:t_SourceList
lam	ModDataStruct.F90	/^    real(WP),pointer,dimension(:) :: lam$/;"	k	line:236	language:Fortran	type:t_TargetList
m	ModDataStruct.F90	/^    integer :: m,/;"	k	line:36	language:Fortran	type:t_spline
makeAxiSymm	ModTimeInt.F90	/^subroutine makeAxiSymm$/;"	s	line:931	language:Fortran
meshSize	ModDataStruct.F90	/^    real(WP) :: meshSize$/;"	k	line:124	language:Fortran	type:t_RBC
my_rank	ModPFFTW.F90	/^  integer :: my_rank$/;"	v	line:14	language:Fortran	module:ModPFFTW
n	ModDataStruct.F90	/^    int/;"	k	line:36	language:Fortran	type:t_spline
n	ModQuadRule.F90	/^    int/;"	k	line:13	language:Fortran	type:t_GaussQuad1D
n	ModQuadRule.F90	/^    int/;"	k	line:23	language:Fortran	type:t_GaussQuad2D
nCellTypes	ModConf.F90	/^  integer :: nCellTypes$/;"	v	line:40	language:Fortran	module:ModConf
nPoint	ModDataStruct.F90	/^    integer :: nPoint$/;"	k	line:216	language:Fortran	type:t_SourceList
nPoint	ModDataStruct.F90	/^    integer :: nPoint$/;"	k	line:234	language:Fortran	type:t_TargetList
nazm	ModDataStruct.F90	/^    integer :: nrad, nazm$/;"	k	line:152	language:Fortran	type:t_RbcPolarPatch
nele	ModDataStruct.F90	/^    integer :: nvert, nele$/;"	k	line:183	language:Fortran	type:t_Wall
next	ModDataStruct.F90	/^    integer,pointer :: hoc(:,:,:), next(/;"	k	line:224	language:Fortran	type:t_SourceList
nlat	ModDataStruct.F90	/^    integer :: nlat,/;"	k	line:110	language:Fortran	type:t_RBC
nlat	ModDataStruct.F90	/^    integer :: nlat,/;"	k	line:149	language:Fortran	type:t_RbcPolarPatch
nlat0	ModDataStruct.F90	/^    integer :: nlat0,/;"	k	line:109	language:Fortran	type:t_RBC
nlon	ModDataStruct.F90	/^    integer :: nlat, nlon$/;"	k	line:110	language:Fortran	type:t_RBC
nlon	ModDataStruct.F90	/^    integer :: nlat, nlon$/;"	k	line:149	language:Fortran	type:t_RbcPolarPatch
nlon0	ModDataStruct.F90	/^    integer :: nlat0, nlon0$/;"	k	line:109	language:Fortran	type:t_RBC
nodeZmax	ModConf.F90	/^  real(WP) :: nodeZmin, nodeZmax$/;"	v	line:24	language:Fortran	module:ModConf
nodeZmaxBuf	ModConf.F90	/^  real(WP) :: nodeZminBuf, nodeZmaxBuf$/;"	v	line:25	language:Fortran	module:ModConf
nodeZmin	ModConf.F90	/^  real(WP) :: nodeZmin,/;"	v	line:24	language:Fortran	module:ModConf
nodeZminBuf	ModConf.F90	/^  real(WP) :: nodeZminBuf,/;"	v	line:25	language:Fortran	module:ModConf
npoint	ModNoSlip.F90	/^  integer :: npoint,/;"	v	line:22	language:Fortran	module:ModNoSlip
nrad	ModDataStruct.F90	/^    integer :: nrad,/;"	k	line:152	language:Fortran	type:t_RbcPolarPatch
nrbc	ModData.F90	/^  integer :: nrbc,/;"	v	line:13	language:Fortran	module:ModData
nvar	ModDataStruct.F90	/^    integer :: m, n, nvar$/;"	k	line:36	language:Fortran	type:t_spline
nvert	ModDataStruct.F90	/^    integer :: nvert,/;"	k	line:183	language:Fortran	type:t_Wall
nwall	ModData.F90	/^  integer :: nrbc, nwall$/;"	v	line:13	language:Fortran	module:ModData
pGradTar	ModConf.F90	/^  real(WP) :: pGradTar(/;"	v	line:60	language:Fortran	module:ModConf
patch	ModDataStruct.F90	/^    type(t_RbcPolarPatch),pointer :: patch$/;"	k	line:127	language:Fortran	type:t_RBC
pgrad_out	ModConf.F90	/^  integer :: pgrad_out$/;"	v	line:85	language:Fortran	module:ModConf
pgrad_unit	ModConf.F90	/^  integer,parameter :: pgrad_unit /;"	v	line:78	language:Fortran	module:ModConf
phi	ModDataStruct.F90	/^    real(WP),dimension(:),pointer :: th, phi,/;"	k	line:111	language:Fortran	type:t_RBC
phiG	ModDataStruct.F90	/^    real(WP),dimension(:,:,:,:),pointer :: thG, phiG;/;"	k	line:154	language:Fortran	type:t_RbcPolarPatch
phiL	ModDataStruct.F90	/^    real(WP),dimension(:),pointer :: thL, phiL,/;"	k	line:153	language:Fortran	type:t_RbcPolarPatch
plan_R_Rh	ModPFFTW.F90	/^  integer(8)	:: plan_R_Rh,/;"	v	line:23	language:Fortran	module:ModPFFTW
plan_Rh_R	ModPFFTW.F90	/^  integer(8)	:: plan_R_Rh,plan_Rh_R$/;"	v	line:23	language:Fortran	module:ModPFFTW
plan_T_Th	ModPFFTW.F90	/^  integer(8)	:: plan_T_Th,/;"	v	line:24	language:Fortran	module:ModPFFTW
plan_Th_T	ModPFFTW.F90	/^  integer(8)	:: plan_T_Th,plan_Th_T$/;"	v	line:24	language:Fortran	module:ModPFFTW
pointsR	ModPFFTW.F90	/^  integer,allocatable,dimension(:,:)	:: pointsR$/;"	v	line:17	language:Fortran	module:ModPFFTW
pointsT	ModPFFTW.F90	/^  integer,allocatable,dimension(:,:)	:: pointsT$/;"	v	line:19	language:Fortran	module:ModPFFTW
qq	ModDataStruct.F90	/^    real(WP),dimension(:,:,:,:),pointer :: qq$/;"	k	line:121	language:Fortran	type:t_RBC
qq	ModPME.F90	/^  real(WP),allocatable :: bb(:,:,:), qq(/;"	v	line:37	language:Fortran	module:ModPME
radius	ModDataStruct.F90	/^    real(WP) :: radius$/;"	k	line:150	language:Fortran	type:t_RbcPolarPatch
rbcPatch	ModData.F90	/^  type(t_RbcPolarPatch),target :: rbcPatch$/;"	v	line:15	language:Fortran	module:ModData
rbcRefs	ModData.F90	/^  type(t_rbc),allocatable,target :: rbcRefs(/;"	v	line:14	language:Fortran	module:ModData
rbcs	ModData.F90	/^  type(t_rbc),allocatable,target :: rbcs(/;"	v	line:16	language:Fortran	module:ModData
rc_Ewd	ModConf.F90	/^  real(WP) :: rc_Ewd$/;"	v	line:35	language:Fortran	module:ModConf
recenter	ModTimeInt.F90	/^subroutine recenter$/;"	s	line:960	language:Fortran
refRad	ModConf.F90	/^  real(WP), allocatable, dimension(:)  :: refRad /;"	v	line:47	language:Fortran	module:ModConf
restart_file	ModConf.F90	/^  character(CHRLEN) :: restart_file$/;"	v	line:90	language:Fortran	module:ModConf
restart_out	ModConf.F90	/^  integer :: restart_out$/;"	v	line:87	language:Fortran	module:ModConf
restart_unit	ModConf.F90	/^  integer,parameter :: restart_unit /;"	v	line:80	language:Fortran	module:ModConf
rhoR	ModPFFTW.F90	/^  double precision,allocatable,dimension(:,:,:)	:: rhoR$/;"	v	line:21	language:Fortran	module:ModPFFTW
rhoRh	ModPFFTW.F90	/^  double complex,allocatable,dimension(:,:,:)	:: rhoRh,/;"	v	line:22	language:Fortran	module:ModPFFTW
rhoT	ModPFFTW.F90	/^  double complex,allocatable,dimension(:,:,:)	:: rhoRh,rhoT,/;"	v	line:22	language:Fortran	module:ModPFFTW
rhoTh	ModPFFTW.F90	/^  double complex,allocatable,dimension(:,:,:)	:: rhoRh,rhoT,rhoTh$/;"	v	line:22	language:Fortran	module:ModPFFTW
rigidsep	ModConf.F90	/^  logical  :: rigidsep$/;"	v	line:56	language:Fortran	module:ModConf
rootEwald	ModConf.F90	/^  logical :: rootWorld, rootEwald$/;"	v	line:19	language:Fortran	module:ModConf
rootWorld	ModConf.F90	/^  logical :: rootWorld,/;"	v	line:19	language:Fortran	module:ModConf
rst	ModQuadRule.F90	/^    real(WP),dimension(:),pointer :: rst$/;"	k	line:14	language:Fortran	type:t_GaussQuad1D
rst	ModQuadRule.F90	/^    real(WP),dimension(:,:),pointer :: rst$/;"	k	line:24	language:Fortran	type:t_GaussQuad2D
slist_rbc	ModData.F90	/^  type(t_SourceList),target :: slist_rbc,/;"	v	line:19	language:Fortran	module:ModData
slist_wall	ModData.F90	/^  type(t_SourceList),target :: slist_rbc, slist_wall$/;"	v	line:19	language:Fortran	module:ModData
spln_FdetJ	ModDataStruct.F90	/^    type(t_spline) :: spln_x, spln_a3, spln_detJ, spln_FdetJ,/;"	k	line:126	language:Fortran	type:t_RBC
spln_GdetJ	ModDataStruct.F90	/^    type(t_spline) :: spln_x, spln_a3, spln_detJ, spln_FdetJ, spln_GdetJ$/;"	k	line:126	language:Fortran	type:t_RBC
spln_a3	ModDataStruct.F90	/^    type(t_spline) :: spln_x, spln_a3,/;"	k	line:126	language:Fortran	type:t_RBC
spln_detJ	ModDataStruct.F90	/^    type(t_spline) :: spln_x, spln_a3, spln_detJ,/;"	k	line:126	language:Fortran	type:t_RBC
spln_x	ModDataStruct.F90	/^    type(t_spline) :: spln_x,/;"	k	line:126	language:Fortran	type:t_RBC
t_GaussQuad1D	ModQuadRule.F90	/^  type t_GaussQuad1D$/;"	t	line:12	language:Fortran	module:ModQuadRule
t_GaussQuad2D	ModQuadRule.F90	/^  type t_GaussQuad2D$/;"	t	line:22	language:Fortran	module:ModQuadRule
t_NbrRbcList	ModDataStruct.F90	/^  type t_NbrRbcList$/;"	t	line:249	language:Fortran	module:ModDataStruct
t_RBC	ModDataStruct.F90	/^  type t_RBC$/;"	t	line:108	language:Fortran	module:ModDataStruct
t_RbcPolarPatch	ModDataStruct.F90	/^  type t_RbcPolarPatch$/;"	t	line:148	language:Fortran	module:ModDataStruct
t_SourceList	ModDataStruct.F90	/^  type t_SourceList$/;"	t	line:215	language:Fortran	module:ModDataStruct
t_TargetList	ModDataStruct.F90	/^  type t_TargetList$/;"	t	line:233	language:Fortran	module:ModDataStruct
t_Wall	ModDataStruct.F90	/^  type t_Wall$/;"	t	line:182	language:Fortran	module:ModDataStruct
t_spline	ModDataStruct.F90	/^  type t_spline$/;"	t	line:35	language:Fortran	module:ModDataStruct
th	ModDataStruct.F90	/^    real(WP),dimension(:),pointer :: th,/;"	k	line:111	language:Fortran	type:t_RBC
thG	ModDataStruct.F90	/^    real(WP),dimension(:,:,:,:),pointer :: thG,/;"	k	line:154	language:Fortran	type:t_RbcPolarPatch
thL	ModDataStruct.F90	/^    real(WP),dimension(:),pointer :: thL,/;"	k	line:153	language:Fortran	type:t_RbcPolarPatch
time	ModConf.F90	/^  real(WP) :: time0/;"	v	line:70	language:Fortran	module:ModConf
time0	ModConf.F90	/^  real(WP) :: time0,/;"	v	line:70	language:Fortran	module:ModConf
tlist_rbc	ModData.F90	/^  type(t_TargetList),target :: tlist_rbc,/;"	v	line:20	language:Fortran	module:ModData
tlist_wall	ModData.F90	/^  type(t_TargetList),target :: tlist_rbc, tlist_wall$/;"	v	line:20	language:Fortran	module:ModData
tt	ModPME.F90	/^  double precision,allocatable :: ff(:,:,:,:), tt(/;"	v	line:33	language:Fortran	module:ModPME
ttC	ModPME.F90	/^  double complex,allocatable :: ffC(:,:,:,:), ttC(/;"	v	line:34	language:Fortran	module:ModPME
u	ModDataStruct.F90	/^    real(WP),pointer :: u(/;"	k	line:38	language:Fortran	type:t_spline
u1	ModDataStruct.F90	/^    real(WP),pointer :: u1(/;"	k	line:39	language:Fortran	type:t_spline
u12	ModDataStruct.F90	/^    real(WP),pointer :: u1(:,:,:), u2(:,:,:), u12(/;"	k	line:39	language:Fortran	type:t_spline
u2	ModDataStruct.F90	/^    real(WP),pointer :: u1(:,:,:), u2(/;"	k	line:39	language:Fortran	type:t_spline
v	ModDataStruct.F90	/^    real(WP),dimension(:,:,:),pointer :: f, g, v /;"	k	line:118	language:Fortran	type:t_RBC
v2v	ModDataStruct.F90	/^    integer,pointer :: e2v(:,:), v2v(/;"	k	line:185	language:Fortran	type:t_Wall
vBkg	ModConf.F90	/^  real(WP) :: pGradTar(3), vBkg(/;"	v	line:60	language:Fortran	module:ModConf
viscRat	ModConf.F90	/^  real(WP), allocatable, dimension(:)  :: viscRat$/;"	v	line:43	language:Fortran	module:ModConf
viscRatThresh	ModConf.F90	/^  real(WP) :: viscRatThresh /;"	v	line:55	language:Fortran	module:ModConf
vol	ModDataStruct.F90	/^    real(WP) :: xc(3), vol,/;"	k	line:123	language:Fortran	type:t_RBC
vv	ModPME.F90	/^  double precision,allocatable :: ff(:,:,:,:), tt(:,:,:,:,:), vv(/;"	v	line:33	language:Fortran	module:ModPME
vvC	ModPME.F90	/^  double complex,allocatable :: ffC(:,:,:,:), ttC(:,:,:,:,:), vvC(/;"	v	line:34	language:Fortran	module:ModPME
w	ModDataStruct.F90	/^    real(WP),dimension(:),pointer :: th, phi, w$/;"	k	line:111	language:Fortran	type:t_RBC
w	ModDataStruct.F90	/^    real(WP),dimension(:),pointer :: thL, phiL, w;/;"	k	line:153	language:Fortran	type:t_RbcPolarPatch
w	ModQuadRule.F90	/^    real(WP),dimension(:),pointer :: w(/;"	k	line:15	language:Fortran	type:t_GaussQuad1D
w	ModQuadRule.F90	/^    real(WP),dimension(:),pointer :: w(/;"	k	line:25	language:Fortran	type:t_GaussQuad2D
wall_out	ModConf.F90	/^  integer :: wall_out$/;"	v	line:84	language:Fortran	module:ModConf
wall_unit	ModConf.F90	/^  integer,parameter :: wall_unit /;"	v	line:77	language:Fortran	module:ModConf
walls	ModData.F90	/^  type(t_wall),allocatable,target :: walls(/;"	v	line:17	language:Fortran	module:ModData
wshags	ModDataStruct.F90	/^    real(WP),dimension(:),pointer :: wshags,/;"	k	line:112	language:Fortran	type:t_RBC
wshses	ModDataStruct.F90	/^    real(WP),dimension(:),pointer :: wshags, wshsgs, wshses,/;"	k	line:112	language:Fortran	type:t_RBC
wshsgs	ModDataStruct.F90	/^    real(WP),dimension(:),pointer :: wshags, wshsgs,/;"	k	line:112	language:Fortran	type:t_RBC
wvhsgs	ModDataStruct.F90	/^    real(WP),dimension(:),pointer :: wshags, wshsgs, wshses, wvhsgs$/;"	k	line:112	language:Fortran	type:t_RBC
x	ModDataStruct.F90	/^    real(WP),dimension(:,:,:),pointer :: x$/;"	k	line:113	language:Fortran	type:t_RBC
x	ModDataStruct.F90	/^    real(WP),pointer :: x(/;"	k	line:184	language:Fortran	type:t_Wall
x	ModDataStruct.F90	/^    real(WP),pointer,dimension(:,:) :: x$/;"	k	line:235	language:Fortran	type:t_TargetList
x	ModDataStruct.F90	/^    real(WP),pointer,dimension(:,:) :: x,/;"	k	line:217	language:Fortran	type:t_SourceList
xc	ModDataStruct.F90	/^    real(WP) :: xc(/;"	k	line:123	language:Fortran	type:t_RBC
