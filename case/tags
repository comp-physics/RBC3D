!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
EXECUTABLES	Makefile	/^EXECUTABLES = tube initcond tube_init$/;"	m	line:4	language:Make
FinalizeAll	initcond.F90	/^ subroutine FinalizeAll$/;"	s	line:245	language:Fortran	program:InitCond
FinalizeAll	tube.F90	/^  subroutine FinalizeAll$/;"	s	line:51	language:Fortran	program:cells_in_tube
FinalizeSystem	initcond.F90	/^  subroutine FinalizeSystem$/;"	s	line:322	language:Fortran	program:InitCond
FinalizeSystem	tube.F90	/^  subroutine FinalizeSystem$/;"	s	line:133	language:Fortran	program:cells_in_tube
InitAll	initcond.F90	/^ subroutine InitAll$/;"	s	line:226	language:Fortran	program:InitCond
InitAll	tube.F90	/^  subroutine InitAll$/;"	s	line:31	language:Fortran	program:cells_in_tube
InitCond	initcond.F90	/^program InitCond$/;"	p	line:2	language:Fortran
InitSystem	initcond.F90	/^subroutine InitSystem$/;"	s	line:258	language:Fortran	program:InitCond
InitSystem	tube.F90	/^  subroutine InitSystem$/;"	s	line:65	language:Fortran	program:cells_in_tube
LIB	Makefile	/^LIB = $(COMMON_LIB) $(SPHPK_LIB) $(FFTW_LIB) $(LAPACK95_LIB) $(PETSC_LIB) $(NETCDF_LIB) $(MKL_LIB) $(STATIC)$/;"	m	line:3	language:Make
ReboxRbcs	initcond.F90	/^  subroutine ReboxRbcs$/;"	s	line:354	language:Fortran	program:InitCond
Recenter_Cells_and_Walls	initcond.F90	/^subroutine Recenter_Cells_and_Walls$/;"	s	line:177	language:Fortran	program:InitCond
base_cell	initcond.F90	/^  real, allocatable, dimension(:,:,:) :: base_cell$/;"	v	line:33	language:Fortran	program:InitCond
cells_in_tube	tube.F90	/^program cells_in_tube$/;"	p	line:2	language:Fortran
dealias	initcond.F90	/^  integer :: iz, i, p, l, dealias$/;"	v	line:27	language:Fortran	program:InitCond
fn	initcond.F90	/^  character(CHRLEN) :: fn$/;"	v	line:29	language:Fortran	program:InitCond
fn	tube.F90	/^  character(CHRLEN) :: fn$/;"	v	line:16	language:Fortran	program:cells_in_tube
i	initcond.F90	/^  in/;"	v	line:27	language:Fortran	program:InitCond
ii	initcond.F90	/^  integer :: nlat0, ii$/;"	v	line:24	language:Fortran	program:InitCond
iz	initcond.F90	/^  integer :: iz,/;"	v	line:27	language:Fortran	program:InitCond
l	initcond.F90	/^  integer :: iz, i, p, l,/;"	v	line:27	language:Fortran	program:InitCond
lengspacing	initcond.F90	/^  real :: lengtube, lengspacing,/;"	v	line:30	language:Fortran	program:InitCond
lengtube	initcond.F90	/^  real :: lengtube,/;"	v	line:30	language:Fortran	program:InitCond
nlat	initcond.F90	/^  integer :: nlat,/;"	v	line:32	language:Fortran	program:InitCond
nlat0	initcond.F90	/^  integer :: nlat0,/;"	v	line:24	language:Fortran	program:InitCond
nlon	initcond.F90	/^  integer :: nlat, nlon$/;"	v	line:32	language:Fortran	program:InitCond
nrbcMax	initcond.F90	/^  integer,parameter :: nrbcMax /;"	v	line:18	language:Fortran	program:InitCond
nwallMax	initcond.F90	/^  integer,parameter :: nwallMax /;"	v	line:19	language:Fortran	program:InitCond
p	initcond.F90	/^  integer :: iz, i, p,/;"	v	line:27	language:Fortran	program:InitCond
phi	initcond.F90	/^  real :: lengtube, lengspacing, phi$/;"	v	line:30	language:Fortran	program:InitCond
radEqv	initcond.F90	/^  real(WP) :: radEqv,/;"	v	line:23	language:Fortran	program:InitCond
ranseed	initcond.F90	/^  integer,parameter :: ranseed /;"	v	line:28	language:Fortran	program:InitCond
rbc	initcond.F90	/^  type(t_rbc)/;"	v	line:20	language:Fortran	program:InitCond
rbcRef	initcond.F90	/^  type(t_rbc)         :: rbcRef$/;"	v	line:21	language:Fortran	program:InitCond
rc	initcond.F90	/^  real(WP) :: theta, th, rc,/;"	v	line:25	language:Fortran	program:InitCond
szCell	initcond.F90	/^  real(WP) :: radEqv, szCell(/;"	v	line:23	language:Fortran	program:InitCond
th	initcond.F90	/^  real(WP) :: the/;"	v	line:25	language:Fortran	program:InitCond
theta	initcond.F90	/^  real(WP) :: theta,/;"	v	line:25	language:Fortran	program:InitCond
wall	initcond.F90	/^  type(t_wall)/;"	v	line:22	language:Fortran	program:InitCond
xc	initcond.F90	/^  real(WP) :: theta, th, rc, xc(/;"	v	line:25	language:Fortran	program:InitCond
xmax	initcond.F90	/^  real(WP) :: xmin, xmax,/;"	v	line:26	language:Fortran	program:InitCond
xmin	initcond.F90	/^  real(WP) :: xmin,/;"	v	line:26	language:Fortran	program:InitCond
ymax	initcond.F90	/^  real(WP) :: xmin, xmax, ymin, ymax,/;"	v	line:26	language:Fortran	program:InitCond
ymin	initcond.F90	/^  real(WP) :: xmin, xmax, ymin,/;"	v	line:26	language:Fortran	program:InitCond
zmax	initcond.F90	/^  real(WP) :: xmin, xmax, ymin, ymax, zmin, zmax$/;"	v	line:26	language:Fortran	program:InitCond
zmin	initcond.F90	/^  real(WP) :: xmin, xmax, ymin, ymax, zmin,/;"	v	line:26	language:Fortran	program:InitCond
